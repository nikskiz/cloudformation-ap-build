Description:
    This template deploys a Postgres RDS.

Parameters:

    EnvironmentName:
        Description: An environment name that will be prefixed to resource names
        Type: String
    SecurityGroupStackName:
        Description: The stackname for the Security Group creation
        Type: String
    VPCStackName:
        Description: The stackname for the VPC creation
        Type: String
    MasterUsername:
        Description: The RDS's username
        Type: String
    MasterUserPassword:
        Description: The RDS's master password
        Type: String
    DatabaseName:
        Description: Databasename to create with the RDS
        Type: String

Resources:

    RDSSubnetGroup:
        Type: "AWS::RDS::DBSubnetGroup"
        Properties:
            DBSubnetGroupDescription: "Subnet group for a private instance"
            SubnetIds:
                - Fn::ImportValue:
                    !Sub "${VPCStackName}-PrivateSubnet1"
                - Fn::ImportValue:
                    !Sub "${VPCStackName}-PrivateSubnet2"
            Tags:
                - Key: Name
                  Value: !Sub ${EnvironmentName} SubnetGroup

    RDS:
        Type: AWS::RDS::DBInstance
        Properties:
            AllocatedStorage: '10'
            DBInstanceClass: db.t2.micro
            Engine: postgres
            MasterUsername: !Ref MasterUsername
            MasterUserPassword: !Ref MasterUserPassword
            PubliclyAccessible: false
            DBSubnetGroupName: !Ref RDSSubnetGroup
            DBName: !Ref DatabaseName
            VPCSecurityGroups:
              - Fn::ImportValue:
                    !Sub "${SecurityGroupStackName}-RDSSecurityGroup"
            Tags:
                - Key: Name
                  Value: !Sub ${EnvironmentName} RDS
Outputs:

    RDSEndPoint:
        Description: A reference to the RDS Hostname
        Value: !GetAtt RDS.Endpoint.Address
        Export:
            Name: !Sub "${AWS::StackName}-RDSEndPoint"
